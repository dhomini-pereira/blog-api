name: AWS Lambda - Deploy

on:
  push:
    branches:
      - master

jobs:
  seed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run seed in Docker
        env:
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          ADMIN_NAME: ${{ secrets.ADMIN_NAME }}
          ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          docker run --rm \
            -v $(pwd):/app \
            -w /app \
            -e ADMIN_EMAIL \
            -e ADMIN_NAME \
            -e ADMIN_PASSWORD \
            -e DATABASE_URL \
            node:22 \
            sh -c "npm install && npx prisma generate && npm run seed"

  create-layer:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "22"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1
      - name: Install dependencies for Layer
        run: |
          mkdir -p lambda-layer/nodejs
          echo '{}' > lambda-layer/nodejs/package.json
          npm install --prefix lambda-layer/nodejs --omit=dev
          cd lambda-layer && zip -r lambda-layer.zip nodejs
      - name: Upload Lambda Layer
        run: |
          aws lambda publish-layer-version \
            --layer-name blog-layer \
            --zip-file fileb://lambda-layer/lambda-layer.zip \
            --compatible-runtimes nodejs22.x \
            --region sa-east-1

  deploy:
    runs-on: ubuntu-latest
    needs: create-layer
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "22"
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1
      - name: Prepare build
        run: |
          PRISMA_CLI_BINARY_TARGETS=linux-arm64-openssl-3.0.x npx prisma generate
          npm run build
          rm -rf src
          mv build src
      - name: Deploy to AWS Lambda
        run: |
          zip -r deploy.zip ./*
          aws lambda update-function-code --function-name=blog-api --zip-file=fileb://deploy.zip
      - name: Attach Lambda Layer
        run: |
          LAYER_ARN=$(aws lambda list-layer-versions --layer-name blog-layer --query 'LayerVersions[0].LayerVersionArn' --output text)
          aws lambda update-function-configuration --function-name blog-api --layers $LAYER_ARN
